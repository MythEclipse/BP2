#Requires -Version 5.1
# -----------------------------------
# Java Applet Runner with Package Support
# -----------------------------------

$jdkBinPath = "C:\Program Files\OpenLogic\jdk-8.0.452.09-hotspot\bin"
$originalPath = $env:PATH

# Validasi JDK path
if (-not (Test-Path $jdkBinPath)) {
    Write-Error "Direktori JDK bin tidak ditemukan di: $jdkBinPath"
    exit 1
}
if (-not (Test-Path (Join-Path $jdkBinPath "javac.exe"))) {
    Write-Error "javac.exe tidak ditemukan di $jdkBinPath."
    exit 1
}
if (-not (Test-Path (Join-Path $jdkBinPath "appletviewer.exe"))) {
    Write-Error "appletviewer.exe tidak ditemukan di $jdkBinPath."
    exit 1
}

# Tambahkan ke PATH sementara
$env:PATH = "$jdkBinPath;$env:PATH"
Write-Host "PATH sementara disiapkan..."

# Ambil semua file .java
try {
    $javaFiles = Get-ChildItem -Filter *.java -ErrorAction Stop
} catch {
    Write-Error "Gagal membaca file .java: $($_.Exception.Message)"
    $env:PATH = $originalPath
    exit 1
}

if ($javaFiles.Count -eq 0) {
    Write-Host "Tidak ada file .java di folder ini."
    $env:PATH = $originalPath
    exit
}

# Pilih file
Write-Host "`nPilih file Java:"
for ($i = 0; $i -lt $javaFiles.Count; $i++) {
    Write-Host "$($i + 1). $($javaFiles[$i].Name)"
}
$choice = Read-Host "Masukkan nomor file (1 - $($javaFiles.Count))"
if (-not ([int]::TryParse($choice, [ref]$null)) -or $choice -lt 1 -or $choice -gt $javaFiles.Count) {
    Write-Warning "Input tidak valid."
    $env:PATH = $originalPath
    exit 1
}

$file = $javaFiles[$choice - 1]
$className = $file.BaseName
$htmlFile = "$className.html"

# Deteksi package (jika ada)
$package = ""
$packageMatch = Select-String -Path $file.FullName -Pattern '^\s*package\s+([\w\.]+);' | Select-Object -First 1
if ($packageMatch) {
    $package = $packageMatch.Matches[0].Groups[1].Value
    Write-Host "Package terdeteksi: $package"
}

# Kompilasi
Write-Host "`nMeng-compile file..."
javac -d . $file.Name
if ($LASTEXITCODE -ne 0) {
    Write-Error "Kompilasi gagal."
    $env:PATH = $originalPath
    exit 1
}
Write-Host "Kompilasi berhasil."

# Bangun nama class untuk HTML
if ($package) {
    $qualifiedClass = "$package.$className"
} else {
    $qualifiedClass = $className
}

# Buat HTML jika belum ada
if (-not (Test-Path $htmlFile)) {
    Write-Host "Membuat file HTML: $htmlFile"
    $html = @"
<html>
  <head>
    <title>Applet Viewer: $className</title>
  </head>
  <body>
    <h2>Menjalankan Applet: $qualifiedClass</h2>
    <hr>
    <applet code="$qualifiedClass.class" width="400" height="300">
        Applet tidak dapat dimuat.
    </applet>
    <hr>
    <small>Generated by PowerShell</small>
  </body>
</html>
"@
    $html | Out-File -Encoding UTF8 $htmlFile
} else {
    Write-Host "Menggunakan file HTML yang sudah ada: $htmlFile"
}

# Jalankan appletviewer
Write-Host "`nMenjalankan appletviewer..."
appletviewer $htmlFile
if ($LASTEXITCODE -ne 0) {
    Write-Warning "appletviewer keluar dengan kode $LASTEXITCODE"
}

# Kembalikan PATH
$env:PATH = $originalPath
Write-Host "`nPATH dikembalikan. Skrip selesai."
